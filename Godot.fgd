@baseclass = Angle [
	// https://github.com/TrenchBroom/TrenchBroom/issues/3827
	angles(string) : "Pitch Yaw Roll" : "0 0 0"
]

@baseclass = Light [
    light_color(string) : "Color" : "255 255 255"
    light_energy(float) : "Energy" : 1.0
    light_indirect_energy(float) : "Indirect Energy" : 1.0
    light_specular(float) : "Specular" : 0.5
    shadow_enabled(choices) : "Shadows Enabled" : 0 =
    [
        0 : "false"
        1 : "true"
    ]
]

@baseclass base(Light) = SpotLight [
    spot_range(float) : "Range" : 5.0
    spot_attenuation(float) : "Attenuation" : 1.0
    spot_angle(float) : "Angle" : 45.0
    spot_angle_attenuation(float) : "Angle Attenuation" : 1.0
]

@SolidClass = worldspawn : "World entity" []

@SolidClass = area : "Area" []

@PointClass size(-8 -8 0, 8 8 32) color(0 255 0) = player : "Player spawn" [
    spawnflags(flags) =
    [
        1 : "Disable Light" : 0
    ]
]

@PointClass size(-32 -32 -40, 32 32 40) = elevator : "Elevator" [
    angle(float) : "Yaw" : 0
]

@PointClass base(Angle, SpotLight) model("models/editor/light_spot.obj") = light_spot : "Light Spot" [
]

@PointClass base(Angle, SpotLight) model({ "path": "models/light/light_linear.obj", "scale": 0.25 }) = light_linear : "Light Linear" [
]

@PointClass base(Angle) model({ "path": "models/terminal.obj", "scale": 0.25 }) = terminal : "Terminal" [
    user(string) : "User" : ""
]

@PointClass = pickup_spawn : "Pickup Spawn" [
]

@PointClass iconsprite("textures/editor/light.png") = light : "Light" [
	range(float) : "Range" : 10
	energy(float) : "Energy" : 1 : "The light's strengh multiplier"
	attenuation(float) : "Attenuation" : 1 : "The drop-off curve (lower values emit more light far away)"
	specular(float) : "Specular" : 0.5 : "Intensity of the specular blob on reflective surfaces"
	light_color(color255) : "Color" : "255 255 255"
]

